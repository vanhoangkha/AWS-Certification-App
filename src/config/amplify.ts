// Amplify configuration
import { Amplify } from 'aws-amplify'

// This will be auto-generated by Amplify CLI after running `amplify push`
// For now, we'll export a configuration function that can be called when the config is available

export const configureAmplify = (config: any) => {
  Amplify.configure({
    Auth: {
      Cognito: {
        userPoolId: config.aws_user_pools_id,
        userPoolClientId: config.aws_user_pools_web_client_id,
        identityPoolId: config.aws_cognito_identity_pool_id,
        loginWith: {
          oauth: {
            domain: config.oauth?.domain,
            scopes: ['openid', 'email', 'profile'],
            redirectSignIn: config.oauth?.redirectSignIn || 'http://localhost:3000/',
            redirectSignOut: config.oauth?.redirectSignOut || 'http://localhost:3000/',
            responseType: 'code'
          },
          email: true,
          username: false
        },
        signUpVerificationMethod: 'code',
        userAttributes: {
          email: {
            required: true
          },
          name: {
            required: true
          }
        },
        allowGuestAccess: false,
        passwordFormat: {
          minLength: 8,
          requireLowercase: true,
          requireUppercase: true,
          requireNumbers: true,
          requireSpecialCharacters: true
        }
      }
    },
    API: {
      GraphQL: {
        endpoint: config.aws_appsync_graphqlEndpoint,
        region: config.aws_appsync_region,
        defaultAuthMode: 'userPool'
      }
    },
    Storage: {
      S3: {
        bucket: config.aws_user_files_s3_bucket,
        region: config.aws_user_files_s3_bucket_region
      }
    },
    Analytics: {
      Pinpoint: {
        appId: config.aws_mobile_analytics_app_id,
        region: config.aws_mobile_analytics_app_region
      }
    }
  })
}

// Default configuration for development
export const defaultConfig = {
  aws_project_region: 'us-east-1',
  aws_appsync_graphqlEndpoint: 'https://example.appsync-api.us-east-1.amazonaws.com/graphql',
  aws_appsync_region: 'us-east-1',
  aws_appsync_authenticationType: 'AMAZON_COGNITO_USER_POOLS',
  aws_cognito_identity_pool_id: 'us-east-1:example-identity-pool-id',
  aws_user_pools_id: 'us-east-1_example',
  aws_user_pools_web_client_id: 'example-client-id',
  aws_user_files_s3_bucket: 'example-bucket',
  aws_user_files_s3_bucket_region: 'us-east-1',
  aws_mobile_analytics_app_id: 'example-app-id',
  aws_mobile_analytics_app_region: 'us-east-1',
  oauth: {
    domain: 'awscertificationplatform.auth.us-east-1.amazoncognito.com',
    redirectSignIn: 'http://localhost:3000/',
    redirectSignOut: 'http://localhost:3000/'
  }
}

// Environment-specific configurations
export const getEnvironmentConfig = (env: string) => {
  switch (env) {
    case 'dev':
      return {
        ...defaultConfig,
        oauth: {
          ...defaultConfig.oauth,
          redirectSignIn: 'http://localhost:3000/',
          redirectSignOut: 'http://localhost:3000/'
        }
      }
    case 'staging':
      return {
        ...defaultConfig,
        oauth: {
          ...defaultConfig.oauth,
          redirectSignIn: 'https://staging.awscertificationplatform.com/',
          redirectSignOut: 'https://staging.awscertificationplatform.com/'
        }
      }
    case 'prod':
      return {
        ...defaultConfig,
        oauth: {
          ...defaultConfig.oauth,
          redirectSignIn: 'https://awscertificationplatform.com/',
          redirectSignOut: 'https://awscertificationplatform.com/'
        }
      }
    default:
      return defaultConfig
  }
}